/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AnswerCreateNestedManyWithoutSurveysInput } from "./AnswerCreateNestedManyWithoutSurveysInput";
import { ValidateNested, IsOptional, IsString, IsInt } from "class-validator";
import { Type } from "class-transformer";
import { DrawingWhereUniqueInput } from "../../drawing/base/DrawingWhereUniqueInput";
import { QuestionCreateNestedManyWithoutSurveysInput } from "./QuestionCreateNestedManyWithoutSurveysInput";
import { ResearcherWhereUniqueInput } from "../../researcher/base/ResearcherWhereUniqueInput";
@InputType()
class SurveyCreateInput {
  @ApiProperty({
    required: false,
    type: () => AnswerCreateNestedManyWithoutSurveysInput,
  })
  @ValidateNested()
  @Type(() => AnswerCreateNestedManyWithoutSurveysInput)
  @IsOptional()
  @Field(() => AnswerCreateNestedManyWithoutSurveysInput, {
    nullable: true,
  })
  answers?: AnswerCreateNestedManyWithoutSurveysInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => DrawingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DrawingWhereUniqueInput)
  @IsOptional()
  @Field(() => DrawingWhereUniqueInput, {
    nullable: true,
  })
  drawingId?: DrawingWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  numOfQuestions!: number;

  @ApiProperty({
    required: false,
    type: () => QuestionCreateNestedManyWithoutSurveysInput,
  })
  @ValidateNested()
  @Type(() => QuestionCreateNestedManyWithoutSurveysInput)
  @IsOptional()
  @Field(() => QuestionCreateNestedManyWithoutSurveysInput, {
    nullable: true,
  })
  questions?: QuestionCreateNestedManyWithoutSurveysInput;

  @ApiProperty({
    required: false,
    type: () => ResearcherWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ResearcherWhereUniqueInput)
  @IsOptional()
  @Field(() => ResearcherWhereUniqueInput, {
    nullable: true,
  })
  researcherId?: ResearcherWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  title!: string;
}
export { SurveyCreateInput };
