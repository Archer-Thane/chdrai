/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  ValidateNested,
  IsOptional,
  IsEnum,
  IsString,
} from "class-validator";
import { AnswerCreateNestedManyWithoutChildrenInput } from "./AnswerCreateNestedManyWithoutChildrenInput";
import { Type } from "class-transformer";
import { DrawingCreateNestedManyWithoutChildrenInput } from "./DrawingCreateNestedManyWithoutChildrenInput";
import { EnumChildGender } from "./EnumChildGender";
import { EnumChildNationality } from "./EnumChildNationality";
@InputType()
class ChildCreateInput {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  age!: number;

  @ApiProperty({
    required: false,
    type: () => AnswerCreateNestedManyWithoutChildrenInput,
  })
  @ValidateNested()
  @Type(() => AnswerCreateNestedManyWithoutChildrenInput)
  @IsOptional()
  @Field(() => AnswerCreateNestedManyWithoutChildrenInput, {
    nullable: true,
  })
  answers?: AnswerCreateNestedManyWithoutChildrenInput;

  @ApiProperty({
    required: false,
    type: () => DrawingCreateNestedManyWithoutChildrenInput,
  })
  @ValidateNested()
  @Type(() => DrawingCreateNestedManyWithoutChildrenInput)
  @IsOptional()
  @Field(() => DrawingCreateNestedManyWithoutChildrenInput, {
    nullable: true,
  })
  drawings?: DrawingCreateNestedManyWithoutChildrenInput;

  @ApiProperty({
    required: true,
    enum: EnumChildGender,
  })
  @IsEnum(EnumChildGender)
  @Field(() => EnumChildGender)
  gender!: "Male" | "Female";

  @ApiProperty({
    required: false,
    enum: EnumChildNationality,
  })
  @IsEnum(EnumChildNationality)
  @IsOptional()
  @Field(() => EnumChildNationality, {
    nullable: true,
  })
  nationality?: "Persian" | "Norwegian" | "Indian" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  phoneNumber!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  smsCode?: string | null;
}
export { ChildCreateInput };
