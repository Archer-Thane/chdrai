/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsOptional,
  ValidateNested,
  IsEnum,
  IsString,
} from "class-validator";
import { AnswerUpdateManyWithoutChildrenInput } from "./AnswerUpdateManyWithoutChildrenInput";
import { Type } from "class-transformer";
import { DrawingUpdateManyWithoutChildrenInput } from "./DrawingUpdateManyWithoutChildrenInput";
import { EnumChildGender } from "./EnumChildGender";
import { EnumChildNationality } from "./EnumChildNationality";
@InputType()
class ChildUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  age?: number;

  @ApiProperty({
    required: false,
    type: () => AnswerUpdateManyWithoutChildrenInput,
  })
  @ValidateNested()
  @Type(() => AnswerUpdateManyWithoutChildrenInput)
  @IsOptional()
  @Field(() => AnswerUpdateManyWithoutChildrenInput, {
    nullable: true,
  })
  answers?: AnswerUpdateManyWithoutChildrenInput;

  @ApiProperty({
    required: false,
    type: () => DrawingUpdateManyWithoutChildrenInput,
  })
  @ValidateNested()
  @Type(() => DrawingUpdateManyWithoutChildrenInput)
  @IsOptional()
  @Field(() => DrawingUpdateManyWithoutChildrenInput, {
    nullable: true,
  })
  drawings?: DrawingUpdateManyWithoutChildrenInput;

  @ApiProperty({
    required: false,
    enum: EnumChildGender,
  })
  @IsEnum(EnumChildGender)
  @IsOptional()
  @Field(() => EnumChildGender, {
    nullable: true,
  })
  gender?: "Male" | "Female";

  @ApiProperty({
    required: false,
    enum: EnumChildNationality,
  })
  @IsEnum(EnumChildNationality)
  @IsOptional()
  @Field(() => EnumChildNationality, {
    nullable: true,
  })
  nationality?: "Persian" | "Norwegian" | "Indian" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  smsCode?: string | null;
}
export { ChildUpdateInput };
