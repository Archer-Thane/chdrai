/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IntFilter } from "../../util/IntFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { AnswerListRelationFilter } from "../../answer/base/AnswerListRelationFilter";
import { DrawingListRelationFilter } from "../../drawing/base/DrawingListRelationFilter";
import { EnumChildGender } from "./EnumChildGender";
import { StringFilter } from "../../util/StringFilter";
import { EnumChildNationality } from "./EnumChildNationality";
import { StringNullableFilter } from "../../util/StringNullableFilter";
@InputType()
class ChildWhereInput {
  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  age?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => AnswerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AnswerListRelationFilter)
  @IsOptional()
  @Field(() => AnswerListRelationFilter, {
    nullable: true,
  })
  answers?: AnswerListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DrawingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DrawingListRelationFilter)
  @IsOptional()
  @Field(() => DrawingListRelationFilter, {
    nullable: true,
  })
  drawings?: DrawingListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumChildGender,
  })
  @IsEnum(EnumChildGender)
  @IsOptional()
  @Field(() => EnumChildGender, {
    nullable: true,
  })
  gender?: "Male" | "Female";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumChildNationality,
  })
  @IsEnum(EnumChildNationality)
  @IsOptional()
  @Field(() => EnumChildNationality, {
    nullable: true,
  })
  nationality?: "Persian" | "Norwegian" | "Indian";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  phoneNumber?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  smsCode?: StringNullableFilter;
}
export { ChildWhereInput };
