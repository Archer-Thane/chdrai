/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AnswerUpdateManyWithoutQuestionsInput } from "./AnswerUpdateManyWithoutQuestionsInput";
import {
  ValidateNested,
  IsOptional,
  IsInt,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { ChoiceUpdateManyWithoutQuestionsInput } from "./ChoiceUpdateManyWithoutQuestionsInput";
import { SurveyWhereUniqueInput } from "../../survey/base/SurveyWhereUniqueInput";
import { EnumQuestionTypeOfQuestion } from "./EnumQuestionTypeOfQuestion";
@InputType()
class QuestionUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AnswerUpdateManyWithoutQuestionsInput,
  })
  @ValidateNested()
  @Type(() => AnswerUpdateManyWithoutQuestionsInput)
  @IsOptional()
  @Field(() => AnswerUpdateManyWithoutQuestionsInput, {
    nullable: true,
  })
  answers?: AnswerUpdateManyWithoutQuestionsInput;

  @ApiProperty({
    required: false,
    type: () => ChoiceUpdateManyWithoutQuestionsInput,
  })
  @ValidateNested()
  @Type(() => ChoiceUpdateManyWithoutQuestionsInput)
  @IsOptional()
  @Field(() => ChoiceUpdateManyWithoutQuestionsInput, {
    nullable: true,
  })
  choices?: ChoiceUpdateManyWithoutQuestionsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  indexInSurvey?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  questionText?: string;

  @ApiProperty({
    required: false,
    type: () => SurveyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SurveyWhereUniqueInput)
  @IsOptional()
  @Field(() => SurveyWhereUniqueInput, {
    nullable: true,
  })
  surveyId?: SurveyWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumQuestionTypeOfQuestion,
  })
  @IsEnum(EnumQuestionTypeOfQuestion)
  @IsOptional()
  @Field(() => EnumQuestionTypeOfQuestion, {
    nullable: true,
  })
  typeOfQuestion?:
    | "ShortAnswer"
    | "LongAnswer"
    | "SingleChoice"
    | "MultiChoice";
}
export { QuestionUpdateInput };
